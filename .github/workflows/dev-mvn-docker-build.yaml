---
# The workflow to deploy snapshot artifact versions to Maven Central
# Fill free to adjust java version and additional mvn command-line parameters
# The workflow will trigger on pushes into branches different from main and release
# Please make sure that the version in the pom.xml file has the SNAPSHOT postfix

# Please adjust pom.xml file for your project according to the instructions:
# https://github.com/Netcracker/qubership-workflow-hub/blob/main/docs/maven-publish-pom-preparation_doc.md

name: Maven deploy snapshot

on:
  push:
    branches-ignore:
      - "**release*"
      - "prettier/**"
      - "dependabot/**"
    paths-ignore:
      - "docs/**"
      - "README.md"
      - ".github/**"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  mvn-snapshot-deploy:
    uses: ./.github/workflows/re-maven-snapshot-deploy.yaml
    with:
      java-version: "21"
      additional-mvn-args: "-Dstage=release -Dstage=test -Denable-analyzers=true -Dpg.jdbc.Url=jdbc:postgresql://localhost:5432/envconf -Dpg.jdbc.User=envconf -Dpg.jdbc.Password=envconf"
      target-store: "maven-central"
    secrets:
      maven-username: ${{ secrets.MAVEN_USER }}
      maven-token: ${{ secrets.MAVEN_PASSWORD }}
      gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

  perform-version:
    runs-on: ubuntu-latest
    needs: mvn-snapshot-deploy
    outputs:
      metadata: "${{ steps.metadata.outputs.result }}"
      tags: "${{ steps.prepare_tags.outputs.tags }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create name
        uses: netcracker/qubership-workflow-hub/actions/metadata-action@main
        id: metadata

      - name: Prepare tags
        id: prepare_tags
        run: |
          BASE_TAG="${{ steps.metadata.outputs.result }}"
          EXTRA_TAG="${{ github.event.inputs.tags }}"
          if [ -n "$EXTRA_TAG" ]; then
            TAGS="${BASE_TAG}, ${EXTRA_TAG}"
          else
            TAGS="${BASE_TAG}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Summary step
        run: |
          echo "**Metadata:** ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.prepare_tags.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

  docker-build:
    uses: ./.github/workflows/docker-publish.yaml
    needs: perform-version
    with:
      ref: ${{ github.event.ref }}
      artifact-id: ${{ github.event.inputs.artifact-name || github.event.repository.name }}
      dry-run: true
      download-artifact: true
      tags: ${{ needs.perform-version.outputs.tags }}