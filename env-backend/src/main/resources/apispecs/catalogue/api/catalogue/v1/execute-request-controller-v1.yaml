openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
  contact:
    name: OurCompany
    url: https://www.ourcompany.com/company/about-ourcompany/contact-us.html
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: execute-request-controller
    description: Execute Request Controller
paths:
  '/catalog/api/v1/executionrequests/execute/labels/{labelId}/folder/{folderId}/search':
    post:
      tags:
        - execute-request-controller
      summary: getExecutionOrderBySearch
      operationId: getExecutionOrderBySearch
      parameters:
        - name: labelId
          in: path
          description: labelId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          description: folderId
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: Authorization
          in: header
          description: Authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/executionrequests/execute/testcases:
    post:
      tags:
        - execute-request-controller
      summary: execute
      operationId: execute
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string
                  format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/executionrequests/rerun:
    post:
      tags:
        - execute-request-controller
      summary: rerun
      operationId: rerun
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerunRequest'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    ExecuteRequest:
      title: ExecuteRequest
      required:
        - environmentIds
        - taToolIds
      type: object
      properties:
        autoSyncCasesWithJira:
          type: boolean
        autoSyncRunsWithJira:
          type: boolean
        contextVariables:
          type: object
        emailRecipients:
          type: array
          items:
            type: string
        emailSubject:
          type: string
        emailTemplateId:
          type: string
          format: uuid
        environmentIds:
          type: array
          items:
            type: string
            format: uuid
        executeExecution:
          type: boolean
        executePrerequisites:
          type: boolean
        executeValidation:
          type: boolean
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_BLOCKED
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
        labelTemplateId:
          type: string
          format: uuid
        logCollectorConditionId:
          type: string
          format: uuid
        name:
          type: string
        projectId:
          type: string
          format: uuid
        taToolIds:
          type: array
          items:
            type: string
            format: uuid
        testCaseIds:
          type: array
          items:
            type: string
            format: uuid
        testPlanId:
          type: string
          format: uuid
        testScopeId:
          type: string
          format: uuid
        threadCount:
          type: integer
          format: int32
        widgetConfigTemplateId:
          type: string
          format: uuid
        filterLabels:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    RerunRequest:
      title: RerunRequest
      type: object
      properties:
        emailRecipients:
          type: array
          items:
            type: string
        environmentId:
          type: string
          format: uuid
        executionRequestId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        recompilation:
          type: boolean
        scopeId:
          type: string
          format: uuid
        taToolsGroupId:
          type: string
          format: uuid
        testRunIds:
          type: array
          items:
            type: string
            format: uuid
        threads:
          type: integer
          format: int32
    Item:
      title: Item
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
