openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  version: '1.0'
  contact:
    name: OurCompany
    url: https://www.ourcompany.com/company/about-ourcompany/contact-us.html
servers:
  - url: 'http://localhost:8080'
    description: Inferred Url
tags:
  - name: test-scope-group-controller
    description: Test Scope Group Controller
paths:
  /catalog/api/v1/testscopegroups:
    get:
      tags:
        - test-scope-group-controller
      summary: getAll
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TestScopeGroup'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - test-scope-group-controller
      summary: create
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestScopeGroup'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: string
                format: uuid
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /catalog/api/v1/testscopegroups/testscopes:
    get:
      tags:
        - test-scope-group-controller
      summary: getAllWithTestScopes
      operationId: getAllWithTestScopes
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestScopeGroupResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/api/v1/testscopegroups/{uuid}':
    get:
      tags:
        - test-scope-group-controller
      summary: getByUuid
      operationId: getByUuid
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TestScopeGroup'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - test-scope-group-controller
      summary: update
      operationId: update
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestScopeGroup'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - test-scope-group-controller
      summary: delete
      operationId: delete
      parameters:
        - name: uuid
          in: path
          description: uuid
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  schemas:
    ObjectOperation:
      title: ObjectOperation
      type: object
      properties:
        name:
          type: string
        operationType:
          type: string
          enum:
            - ADD
            - REMOVE
    TestScope:
      title: TestScope
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        environmentUuid:
          type: string
          format: uuid
        executionCases:
          type: array
          items:
            type: string
            format: uuid
        flags:
          type: array
          items:
            type: string
            enum:
              - COLLECT_LOGS
              - COLLECT_LOGS_ON_BLOCKED
              - COLLECT_LOGS_ON_FAIL
              - COLLECT_LOGS_ON_SKIPPED
              - COLLECT_LOGS_ON_WARNING
              - INVERT_RESULT
              - SKIP
              - SKIP_IF_DEPENDENCIES_FAIL
              - STOP_ON_FAIL
              - TERMINATE_IF_FAIL
              - TERMINATE_IF_PREREQUISITE_FAIL
        groupUuid:
          type: string
          format: uuid
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        numberOfThreshold:
          type: integer
          format: int32
        prerequisitesCases:
          type: array
          items:
            type: string
            format: uuid
        projectUuid:
          type: string
          format: uuid
        solutionBuild:
          type: array
          items:
            type: string
        systemUnderTestHost:
          type: array
          items:
            type: string
        taToolsUuid:
          type: string
          format: uuid
        testPlanUuid:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
        validationCases:
          type: array
          items:
            type: string
            format: uuid
        widgetConfigTemplateId:
          type: string
          format: uuid
    TestScopeGroups:
      title: TestScopeGroups
      type: object
      properties:
        name:
          type: string
        testScopes:
          type: array
          items:
            $ref: '#/components/schemas/TestScope'
        uuid:
          type: string
          format: uuid
    TestScopeGroup:
      title: TestScopeGroup
      type: object
      properties:
        childrenOperations:
          type: array
          items:
            $ref: '#/components/schemas/ObjectOperation'
        createdBy:
          $ref: '#/components/schemas/UserInfo'
        createdWhen:
          type: string
          format: date-time
        description:
          type: string
        modifiedBy:
          $ref: '#/components/schemas/UserInfo'
        modifiedWhen:
          type: string
          format: date-time
        name:
          type: string
        parentGroupId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
    TestScopeGroupResponse:
      title: TestScopeGroupResponse
      type: object
      properties:
        emptyGroupTestScopes:
          type: array
          items:
            $ref: '#/components/schemas/TestScope'
        testScopeGroups:
          type: array
          items:
            $ref: '#/components/schemas/TestScopeGroups'
    UserInfo:
      title: UserInfo
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: string
          format: uuid
        lastName:
          type: string
        roles:
          type: array
          items:
            type: string
        username:
          type: string
