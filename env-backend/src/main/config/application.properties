#prefix=${tool.config.keys.prefix}
server.port=8080
spring.resources.static-locations=file:./web/
spring.resources.cache.period=${CACHE_PERIOD:300}
application.web.root-page=web/index.html
logging.level.org.qubership.atp.environments=${LOG_LEVEL:INFO}
spring.datasource.url=${jdbc.Url}
spring.datasource.username=${jdbc.User}
spring.datasource.password=${jdbc.Password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Spring Boot 2.0 includes HikariDataSource by default
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_POOL_SIZE:10}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:50}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:90000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1200000}
spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.connection-test-query=select 1
spring.datasource.hikari.leak-detection-threshold=10
url.healthcheck=${URL_HEALTHCHECK:}
catalogue.integration.enabled=${CATALOGUE_INTEGRATION_ENABLED:false}
##==================atp-auth-spring-boot-starter=====================
# spring
spring.profiles.active=${SPRING_PROFILES:disable-security}
spring.cache.cache-names=projects
spring.cache.caffeine.spec=maximumSize=100, expireAfterAccess=120s, expireAfterWrite=120s
spring.main.allow-bean-definition-overriding=true
atp-auth.headers.content-security-policy=${CONTENT_SECURITY_POLICY:default-src 'self' *}
#==================Migration=========================================
spring.liquibase.change-log=classpath:changelog-main.xml
logging.level.liquibase=INFO
#hazelcast
hazelcast.cluster-name =${HAZELCAST_CLUSTER_NAME:atp-hc}
hazelcast.enable-caching =${HAZELCAST_ENABLE:false}
hazelcast.system-versions.cache-period = ${CACHE_VERSIONS_PERIOD:21600}
hazelcast.environments_by_system_id.cache-period = ${CACHE_ENVIRONMENTS_BY_SYSTEM_ID_PERIOD:21600}
hazelcast.systems_by_environment_id.cache-period = ${CACHE_SYSTEMS_BY_ENVIRONMENT_ID_PERIOD:21600}
hazelcast.connections-by-system-id.cache-period = ${CACHE_CONNECTIONS_BY_SYSTEM_ID_PERIOD:3600}
hazelcast.address =${HAZELCAST_ADDRESS:127.0.0.1:5701}

# keycloak
keycloak.enabled=${KEYCLOAK_ENABLED:false}
keycloak.public-client=true
keycloak.ssl-required=external
keycloak.bearer-only=true
keycloak.cors=true
keycloak.auth-server-url=${KEYCLOAK_AUTH_URL:}
keycloak.realm=${KEYCLOAK_REALM:}
keycloak.resource=${KEYCLOAK_CLIENT_NAME:}
keycloak.credentials.secret=${KEYCLOAK_SECRET:}
# atp-auth
atp-auth.project_info_endpoint=${PROJECT_INFO_ENDPOINT}
atp-auth.policies-path=policies.yaml
##==================Kafka========================
kafka.enable=${KAFKA_ENABLE:false}
kafka.catalogue.topic=${KAFKA_PROJECT_EVENT_CONSUMER_TOPIC_NAME:catalog_notification_topic}
kafka.environments.topic=${KAFKA_ENVIRONMENTS_EVENT_PRODUCER_TOPIC_NAME:environments_notification_topic}
kafka.systems.topic=${KAFKA_SYSTEMS_EVENT_PRODUCER_TOPIC_NAME:systems_notification_topic}
kafka.connections.topic=${KAFKA_CONNECTIONS_EVENT_PRODUCER_TOPIC_NAME:connections_notification_topic}
kafka.service.entities.topic=${KAFKA_SERVICE_ENTITIES_TOPIC:service_entities}
kafka.service.entities.topic.partitions=${KAFKA_SERVICE_ENTITIES_TOPIC_PARTITIONS:1}
kafka.service.entities.topic.replicas=${KAFKA_SERVICE_ENTITIES_TOPIC_REPLICATION_FACTOR:3}
service.entities.migration.enabled=${SERVICE_ENTITIES_MIGRATION_ENABLED:false}

spring.kafka.consumer.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
spring.kafka.consumer.client-id=${KAFKA_CLIENT_ID:environment}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:environment}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
spring.kafka.producer.client-id=${KAFKA_CLIENT_ID:environment}
spring.kafka.producer.retries=3
spring.kafka.producer.acks=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.UUIDSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.max.request.size=${KAFKA_MAX_REQUEST_SIZE:5000000}
##==================Keycloak=====================
#==================locale resolver==================================
locale.resolver.lang=${LOCALE_RESOLVER:en}
##==================Integration with Spring Cloud======================
spring.application.name=${SERVICE_NAME:atp-environments}
eureka.client.serviceUrl.defaultZone=${SERVICE_REGISTRY_URL:http://atp-registry-service:8761/eureka}
eureka.client.enabled=${EUREKA_CLIENT_ENABLED:false}
eureka.instance.preferIpAddress=true

## ================== Feign ========================
atp.service.internal=${ATP_INTERNAL_GATEWAY_ENABLED:false}
## catalogue
feign.atp.catalogue.url=${FEIGN_ATP_CATALOGUE_URL:}
feign.atp.catalogue.name=${FEIGN_ATP_CATALOGUE_NAME:ATP-CATALOGUE}
feign.atp.catalogue.route=${FEIGN_ATP_CATALOGUE_ROUTE:}
## healthcheck
feign.atp.healthcheck.url=${FEIGN_ATP_HEALTHCHECK_URL:}
feign.atp.healthcheck.name=${FEIGN_ATP_HEALTHCHECK_NAME:ATP-HEALTHCHECK}
feign.atp.healthcheck.route=${FEIGN_ATP_HEALTHCHECK_ROUTE:}
## export-import
feign.atp.ei.url=${FEIGN_ATP_EI_URL:}
feign.atp.ei.name=${FEIGN_ATP_EI_NAME:ATP-EXPORT-IMPORT}
feign.atp.ei.route=${FEIGN_ATP_EI_ROUTE:api/atp-export-import/v1}
##=============EI CleanJob========================
atp.ei.file.cleanup.job.enable=${EI_CLEAN_JOB_ENABLED:true}
atp.export.workdir=${EI_CLEAN_JOB_WORKDIR:exportimport/node}
atp.ei.file.cleanup.job.fixedRate=${EI_CLEAN_SCHEDULED_JOB_PERIOD_MS:86400000}
atp.ei.file.delete.after.ms=${EI_CLEAN_JOB_FILE_DELETE_AFTER_MS:172800000}
## users
feign.atp.users.url=${FEIGN_ATP_USERS_URL:}
feign.atp.users.name=${FEIGN_ATP_USERS_NAME:ATP-USERS-BACKEND}
feign.atp.users.route=${FEIGN_ATP_USERS_ROUTE:api/atp-users-backend/v1}
##=============Feign timeout=================
feign.client.config.default.connectTimeout=${FEIGN_CONNECT_TIMEOUT:160000000}
feign.client.config.default.readTimeout=${FEIGN_READ_TIMEOUT:160000000}

##==================Zipkin=====================
spring.sleuth.enabled=${ZIPKIN_ENABLE:false}
spring.sleuth.sampler.probability=${ZIPKIN_PROBABILITY:1.0}
spring.zipkin.baseUrl=${ZIPKIN_URL:http://127.0.0.1:9411}
spring.sleuth.web.additional-skip-pattern=/rest/deployment/liveness|/rest/deployment/readiness
spring.sleuth.integration.websockets.enabled=${SLEUTH_WEBSOCKETS_ENABLED:false}
spring.sleuth.kafka.enabled=false
##==================Javers=====================
atp-environments.javers.enabled=${JAVERS_ENABLED:true}
atp-environments.last.revision.count=${ATP_LAST_REVISION_COUNT:200}
atp-environments.archive.cron.expression=${ATP_ARCHIVE_CRON_EXPRESSION:0 0 0 * * ?}
atp-environments.archive.job.bulk-delete-count=${ATP_ARCHIVE_BULK_DELETE:1000}
atp-environments.archive.job.name=${ATP_ARCHIVE_JOB_NAME:atp-environments-archive-job}
atp-environments.archive.job.thread.max-pool-size=${ATP_ARCHIVE_MAX_POOL_SIZE:5}
atp-environments.archive.job.thread.core-pool-size=${ATP_ARCHIVE_CORE_POOL_SIZE:5}
atp-environments.archive.job.thread.queue-capacity=${ATP_ARCHIVE_QUEUE_CAPACITY:100}
##=============Multipart files size===========
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size=${MAX_FILE_SIZE:100MB}
##===================EI GridFS==================
ei.gridfs.database=${EI_GRID_DBNAME:dbname}
ei.gridfs.host=${EI_GRID_DBHOST:gridfs.mongocluster.svc}
ei.gridfs.port=${EI_GRID_DBPORT:27017}
ei.gridfs.user=${EI_GRID_USER:user}
ei.gridfs.password=${EI_GRID_PASS:pass}
##=================Monitoring==========================================
management.server.port=${MONITOR_PORT:8090}
management.endpoints.web.exposure.include=${MONITOR_WEB_EXPOSE:prometheus,info,scheduledtasks,flowable}
management.endpoints.web.base-path=${MONITOR_WEB_BASE:/}
management.endpoints.web.path-mapping.prometheus=${MONITOR_WEB_MAP_PROM:metrics}
management.metrics.tags.application=${spring.application.name}

##=============Encryption====================
atp.crypto.enabled=${ATP_CRYPTO_ENABLED:true}
atp.crypto.key=${ATP_CRYPTO_KEY:{ENC}{}{Sck4jAe1F2+uknItF3x4gS6jKaghLUPaYL9+FCip8xxB0R/3vfzbG70rBrC7/utroXr4bdyzICWTxJ+mQHZwBCcEt0JENU1rwoN2z9Y9Q/hfL6agLYSxuc1w2yFMM8MU8fJyrA5586cfMtCi3f5wHzh7WljjcsB8J6CptbCKC7PNoIdAa8VX2DhvRIReWsLrhhe1bbzl/GhqhqIf9Gr2CALUsAZwnv+NyfjTVExuWJWdDP0BS8gnlAlVJyQZGiYJmrsNsNRhC1Rhhg59jvDv9sm+zBUw81G62w+JJP+36XOnRIuuSC6RxckrypQFM04a+XolV6KuhShhoW+zv2IlwQ==}}
atp.crypto.privateKey=${ATP_CRYPTO_PRIVATE_KEY:MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCSs7+T9jYks2wplAIkKZAQZWSzD6sDnfNnkkAHAe4eh1E4OQDyc+Gay11QCxaM0VFwl3JHeFst/fXYMJNsAh7kX00arNDb6QXABoilKDtFY4FPzXJlG6JmLjzJhREl2cH4V5mar1Wb7NQgWeHOBOfYnnwsKUKMI2wRgEhJnkQl5cFFElGikanyAPTq1YTfLVG3ijXDVzI/acSCv/FPEVlyXB0TpolkIOY5KWkDRkNN28Q22ED1CWAw7NV8o9Hgmo+z1gwSDk75ms9zpS/P38LMj0aqhC0ixzQ+WFmf5ODGAE+kShk3JZ7rUmj4PewnyfdAxE6ib80t0z23J1dm8TLdAgMBAAECggEAZ04YjFMHEZUfh6/oShrSjhk4bjeMT8G8k6STXdvoGKtlcFgD6LfdmKm4jhMg0AzecpDTMqz4WEzMAG9EgPyFUIAjxbMIaLORDwYK13KbOmO1vcKI2dY56AaLW8VOq/7J7t2RFzJ88I43Woiwz+j4crw36MktSY3wHerd/Klsh9pO0bPjGLQsSEcJk6BiEjB+hVqBSZa3ioA4uvTP48Tr8T+eLTNu81NI4XeibwmRypyUr4FrAYLubMOYoIO2H9XC68dO6whjmiJ3UeAE/TQ31OipZz74vzwNuT0zYLo3kWqxVesLp1ia/q9nqjYinXqcDJIv1fEBZU5BE4NsgZPZwQKBgQDUEZQy0k1Si+gafcFFBfxnGpnDWSosAgi7ytXvt8Y2YNo3VgNOZ1ykf9bqZezckMo2kPcy5CUEjQHxzjGqq+Ot5qYMyfh0vZ/h8X89IVPxwiDylPhUU0QNk4G9X8Sbw8z+z6tb98++wYbtVCcYFeYNZ4MWYI1usjfBpkYPZYZ/CQKBgQCxF6c7M1IPPUB15bfhWv2ihf2Z5hC/+/JIytUT54XOFd6xZ5TlUwudJcQIpUruCDJilzZBicaA8N4AUKoNtr1eNDf1gXJO+eyyZXN4SH6WIpSXP9MMxmNtX/3H356NyfkqpAZtteMjDfIwW4L7UtF0iuI0zmvxCUhxJoWqLyU2NQKBgFiANY64ARjP1j8n9/4sL1d/3GeP0G+pMafdUEbINOoApVCujparwBfOWgxcGOs7aYg4G1GbsG8jwYn9+PA2579tICL6LrvZXt3WALmsLPIZh9J0pOXcEexwgJZdXxl6LxSv6d1pn8MF1J86nU4J5YX2ithN1vg5W9du4pIOVoCxAoGBAJfVzd4mLE9Alwn+gV/IYfp8o2jWJrpUS/E5ZuN/9+swORUl2DWetDBydtdq0QmxIXICb9RVSkq3OcBPaN4FNeuVHf1ylQ09n0F9Vjlk/pO+5mOfp1YmqozWZoJ+KjUrXGTA6XobHrmpdWMcsvrEkS04/qWD7mxlJyVMgAHgFimZAoGBANIatOQqXT3i4rfvfN8JeFA0RbOAFXqbMb8Ty0IhVEdvj4MNYhRwmaFnW/my2WQcldufGM5FjWbSc4/cEuVp1q4ybhQ8q3XbZQpdRrt5PlZPxgN7ctxTcTI67d7/I+Rf6io+fKaOrPnxHdJqjQj9kNbYG5iAZ20GbR7aCGVuKEaE}

##=============WS inbound channel ThreadPoolTaskExecutor properties============
ws.inbound.channel.thread.pool.core-pool-size=${WS_INBOUND_THREAD_POOL_CORE_SIZE:10}
ws.inbound.channel.thread.pool.max-pool-size=${WS_INBOUND_THREAD_POOL_MAX_SIZE:20}
ws.inbound.channel.thread.pool.queue-capacity=${WS_INBOUND_THREAD_POOL_QUEUE_CAPACITY:10}

##=============HttpClient get version requests timeouts=================
atp-environments.get.version.httpclient.socketTimeout=${GET_VERSION_HTTP_CLIENT_SOCKET_TIMEOUT:600}
atp-environments.get.version.httpclient.maxTotal=${GET_VERSION_HTTP_CLIENT_CONNECTION_MAX_TOTAL:100}
atp-environments.get.version.httpclient.defaultMaxPerRoute=${GET_VERSION_HTTP_CLIENT_CONNECTION_DEFAULT_MAX_PER_ROUTE:20}

atp-environments.regexp.timeout=300000

##=============SSH get version session timeout=================
atp-environments.ssh.session.timeout.seconds=7000
##=============ATP LOGGING========================
atp.logging.resttemplate.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.resttemplate.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE: }
atp.logging.feignclient.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.feignclient.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE: }
atp.logging.controller.headers=${ATP_HTTP_LOGGING_HEADERS:true}
atp.logging.controller.headers.ignore=${ATP_HTTP_LOGGING_HEADERS_IGNORE:}
atp.logging.controller.uri.ignore=${ATP_HTTP_LOGGING_URI_IGNORE:/rest/deployment/readiness /rest/deployment/liveness}
## ==================Swagger========================
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.writer-with-default-pretty-printer=true
springdoc.swagger-ui.url=/v3/api-docs.yaml
server.forward-headers-strategy=NATIVE
##=============Lock Manager========================
atp.lock.default.duration.sec=${JOB_LOCK_DEFAULT_DURATION_SEC:60}
atp.lock.retry.timeout.sec=${JOB_LOCK_RETRY_TIMEOUT_SEC:10800}
atp.lock.retry.pace.sec=${JOB_LOCK_RETRY_PACE_SEC:3}
##=============Audit Logging=================
atp.audit.logging.enable=${AUDIT_LOGGING_ENABLE:false}
atp.audit.logging.topic.name=${AUDIT_LOGGING_TOPIC_NAME:audit_logging_topic}
atp.reporting.kafka.producer.bootstrap-server=${KAFKA_REPORTING_SERVERS:kafka:9092}
atp.audit.logging.topic.partitions=${AUDIT_LOGGING_TOPIC_PARTITIONS:1}
atp.audit.logging.topic.replicas=${AUDIT_LOGGING_TOPIC_REPLICAS:3}

##============SpringFox WA======================
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
